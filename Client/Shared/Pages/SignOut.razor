@using Dnsk.Client.Lib
@using System.Text.RegularExpressions
@using Dnsk.Common
@using AuthValidator = Dnsk.Client.Lib.AuthValidator
<div class="root jc-c ai-c">
    <RadzenCard class="flx col jc-c ai-c p-3 w-25">
        <RadzenText TextStyle="TextStyle.H4" TagName="TagName.H2" class="m-t-0">
            Sign Out
        </RadzenText>
        @if (SigningOut)
        {
            <RadzenText TextStyle="TextStyle.Body1" TagName="TagName.P" class="m-b-1">
                Signing Out
            </RadzenText>
        }
        else
        {
            @if (Success)
            {
            <RadzenText TextStyle="TextStyle.Body1" TagName="TagName.P" class="m-b-1">
                You are now signed out
            </RadzenText>
            }
            else
            {
                <RadzenText TextStyle="TextStyle.Body1" TagName="TagName.P" class="m-b-1 rz-color-danger">
                    Something went wrong, whilst signing out
                </RadzenText>
            }
        }
        <RadzenButton ButtonType="ButtonType.Button" BusyText="Verifying" IsBusy="SigningOut" Text="Sign In" Click="SignIn"/>
    </RadzenCard>
</div>

@inject IAuthService _auth;
@inject NavigationManager _nav;
@inject IMainLayoutService _main;
@code{

    private bool SigningOut = false;

    private bool Success = false;

    protected override async Task OnInitializedAsync()
    {
        SigningOut = true;
        try
        {
            await _auth.SignOut();
            Success = true;
            await _main.AuthStateChanged();
        }
        finally
        {
            SigningOut = false;
        }
    }

    private void SignIn()
    {
        if (!SigningOut && Success)
        {
            _nav.NavigateTo("sign_in");
        }
    }
}