<div class="root">
    <RadzenLayout class="rz-shadow-3">
        <RadzenHeader>
            <div class="d-flex align-items-center">
                <RadzenSidebarToggle Click="@(() => sidebar1Expanded = !sidebar1Expanded)" />
            </div>
        </RadzenHeader>
        <RadzenSidebar @bind-Expanded="@sidebar1Expanded">
            <RadzenPanelMenu>
                <RadzenPanelMenuItem Text="Home" Icon="home" Path="/"/>
                <RadzenPanelMenuItem Text="Counter" Icon="account_box" Path="/counter"/>
            </RadzenPanelMenu>
        </RadzenSidebar>
        <RadzenBody>
            <div class="p-2">
                @Body
            </div>
        </RadzenBody>
    </RadzenLayout>
</div>

@using Dnsk.Client.Lib
@using System.Timers
@using Humanizer
@inherits LayoutComponentBase
@implements IMainLayout;
@inject IMainLayoutService _mls;
@code{

    private bool sidebar1Expanded = false;
    
    private readonly List<Toast> _toasts = new ();

    protected override void OnInitialized()
    {
        _mls.Init(this);
        base.OnInitialized();
    }
    
    public void PopToast(Toast t)
    {
        _toasts.Add(t);
        StateHasChanged();
        Timer timer = new Timer();
        timer.Interval = 10000;
        timer.AutoReset = false;
        timer.Elapsed += (_, _) =>
        {
            if (_toasts.Remove(t))
            {
                StateHasChanged();
            }
        };
        timer.Start();
    }

    private void RemoveToast(Toast t)
    {
        _toasts.Remove(t);
    }

}