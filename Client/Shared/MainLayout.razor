<div class="root @(_theme.Humanize().ToLower())">
    
    <div class="top">
        <TopBar></TopBar>
    </div>
    
    <div class="bot">
    
        <div class="left @(_showLeft? "show": "")">
            <LeftMenu/>
        </div>

        <div class="right">
            @Body
        </div>
        
        <div class="toaster">
            @foreach (var t in _toasts)
            {
                <p @onclick="@(() => RemoveToast(t))" class="toast @(t.Level.Humanize().ToLower())">@t.Message</p>
            }
        </div>
        
    </div>
</div>

@using Dnsk.Client.Lib
@using System.Timers
@using Humanizer
@inherits LayoutComponentBase
@implements IMainLayout;
@inject IMainLayoutService _mls;
@code{

    private bool _showLeft = false;
    
    private readonly List<Toast> _toasts = new ();

    private Theme _theme = Theme.Dark;
    
    protected override void OnInitialized()
    {
        _mls.Init(this);
        base.OnInitialized();
    }

    public void Left(bool? show = null)
    {
        if (show is null || _showLeft != show)
        {
            _showLeft = show ?? !_showLeft;
            StateHasChanged();
        }
    }
    
    public void PopToast(Toast t)
    {
        _toasts.Add(t);
        StateHasChanged();
        Timer timer = new Timer();
        timer.Interval = 10000;
        timer.AutoReset = false;
        timer.Elapsed += (_, _) =>
        {
            if (_toasts.Remove(t))
            {
                StateHasChanged();
            }
        };
        timer.Start();
    }

    private void RemoveToast(Toast t)
    {
        _toasts.Remove(t);
    }

    public void SetTheme(Theme theme)
    {
        _theme = theme;
        StateHasChanged();
    }

}